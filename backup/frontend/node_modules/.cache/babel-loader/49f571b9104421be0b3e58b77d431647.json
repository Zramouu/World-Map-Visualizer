{"ast":null,"code":"var _jsxFileName = \"/Users/zaynabramou/Desktop/Mapping/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PinMarker from './components/PinMarker';\nimport WeatherInfoWindow from './components/WeatherInfoWindow';\nimport NewPinForm from './components/NewPinForm';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport \"./app.css\";\nimport axios from \"axios\";\nimport { fetchWeather } from './components/Weather/weatherService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst initialCenter = {\n  lat: 46,\n  lng: 17\n};\nfunction HomePage() {\n  _s();\n  const [pins, setPins] = useState([]);\n  const [currentUsername] = useState(\"\");\n  const [currentPlaceId, setCurrentPlaceId] = useState(null);\n  const [newPlace, setNewPlace] = useState(null);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    review: \"\",\n    star: 0\n  });\n  const [viewport, setViewport] = useState({\n    lat: initialCenter.lat,\n    lng: initialCenter.lng,\n    zoom: 4\n  });\n  const [viewMode, setViewMode] = useState('pins');\n  const [weatherData, setWeatherData] = useState({});\n  useEffect(() => {\n    const getPins = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:8800/api/pins\");\n        setPins(res.data);\n\n        // Fetch weather data for each pin\n        for (let pin of res.data) {\n          const weather = await fetchWeather(pin.lat, pin.long);\n          setWeatherData(prevData => ({\n            ...prevData,\n            [pin._id]: weather\n          }));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getPins();\n  }, []);\n  const handleMarkerClick = async (id, lat, long) => {\n    setViewport({\n      lat: lat,\n      lng: long,\n      zoom: 4\n    });\n    const data = await fetchWeather(lat, long);\n    setWeatherData(prevState => ({\n      ...prevState,\n      [id]: data\n    }));\n    setCurrentPlaceId(id);\n  };\n  const handleAddClick = e => {\n    const latitude = e.latLng.lat();\n    const longitude = e.latLng.lng();\n    setNewPlace({\n      lat: latitude,\n      long: longitude\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const newPin = {\n      username: currentUsername,\n      title: formData.title,\n      desc: formData.review,\n      rating: formData.star,\n      lat: newPlace.lat,\n      long: newPlace.long\n    };\n    try {\n      const res = await axios.post(\"/pins\", newPin);\n      setPins([...pins, res.data]);\n      setNewPlace(null);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [pins.map(p => /*#__PURE__*/_jsxDEV(PinMarker, {\n      pin: p,\n      currentPlaceId: currentPlaceId,\n      viewMode: viewMode,\n      handleMarkerClick: handleMarkerClick,\n      setCurrentPlaceId: setCurrentPlaceId\n    }, p._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)), pins.map(p => p._id === currentPlaceId && viewMode === 'weather' && weatherData[p._id] && /*#__PURE__*/_jsxDEV(WeatherInfoWindow, {\n      pin: p,\n      weatherData: weatherData,\n      setCurrentPlaceId: setCurrentPlaceId\n    }, p._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this)), newPlace && /*#__PURE__*/_jsxDEV(NewPinForm, {\n      newPlace: newPlace,\n      formData: formData,\n      setFormData: setFormData,\n      handleSubmit: handleSubmit,\n      setNewPlace: setNewPlace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"unk1KuAXmzbnFamoTur51E1lqbY=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","PinMarker","WeatherInfoWindow","NewPinForm","axios","fetchWeather","jsxDEV","_jsxDEV","containerStyle","width","height","initialCenter","lat","lng","HomePage","_s","pins","setPins","currentUsername","currentPlaceId","setCurrentPlaceId","newPlace","setNewPlace","formData","setFormData","title","review","star","viewport","setViewport","zoom","viewMode","setViewMode","weatherData","setWeatherData","getPins","res","get","data","pin","weather","long","prevData","_id","error","console","log","handleMarkerClick","id","prevState","handleAddClick","e","latitude","latLng","longitude","handleSubmit","preventDefault","newPin","username","desc","rating","post","err","className","children","map","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zaynabramou/Desktop/Mapping/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PinMarker from './components/PinMarker';\nimport WeatherInfoWindow from './components/WeatherInfoWindow';\nimport NewPinForm from './components/NewPinForm';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport \"./app.css\";\nimport axios from \"axios\";\nimport { fetchWeather } from './components/Weather/weatherService';\n\nconst containerStyle = {\n    width: '100vw',\n    height: '100vh'\n  };\n  \n  const initialCenter = {\n    lat: 46,\n    lng: 17\n  }\n\nfunction HomePage() {\nconst [pins, setPins] = useState([]);\nconst [currentUsername] = useState(\"\");\nconst [currentPlaceId, setCurrentPlaceId] = useState(null);\nconst [newPlace, setNewPlace] = useState(null);\nconst [formData, setFormData] = useState({\n  title: \"\",\n  review: \"\",\n  star: 0\n});\nconst [viewport, setViewport] = useState({\n  lat: initialCenter.lat,\n  lng: initialCenter.lng,\n  zoom: 4,\n});\nconst [viewMode, setViewMode] = useState('pins');\nconst [weatherData, setWeatherData] = useState({});\n\nuseEffect(() => {\n  const getPins = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8800/api/pins\");\n      setPins(res.data);\n      \n      // Fetch weather data for each pin\n      for (let pin of res.data) {\n        const weather = await fetchWeather(pin.lat, pin.long);\n        setWeatherData(prevData => ({ ...prevData, [pin._id]: weather }));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  getPins();\n}, []);\n\nconst handleMarkerClick = async (id, lat, long) => {\n  setViewport({\n    lat: lat,\n    lng: long,\n    zoom: 4,\n  });\n  \n  const data = await fetchWeather(lat, long);\n  \n  setWeatherData(prevState => ({\n    ...prevState,\n    [id]: data\n  }));\n  \n  setCurrentPlaceId(id);\n};\n\n\nconst handleAddClick = (e) => {\n  const latitude = e.latLng.lat();\n  const longitude = e.latLng.lng();\n  \n  setNewPlace({\n    lat: latitude,\n    long: longitude,\n  });\n};\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  const newPin = {\n      username: currentUsername,\n      title: formData.title,\n      desc: formData.review,\n      rating: formData.star,\n      lat: newPlace.lat,\n      long: newPlace.long,\n  };\n  try {\n    const res = await axios.post(\"/pins\", newPin);\n    setPins([...pins, res.data]);\n    setNewPlace(null);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nreturn (\n    <div className=\"app\">\n      {pins.map(p => (\n        <PinMarker \n            key={p._id} \n            pin={p} \n            currentPlaceId={currentPlaceId} \n            viewMode={viewMode} \n            handleMarkerClick={handleMarkerClick}\n            setCurrentPlaceId={setCurrentPlaceId}\n        />\n      ))}\n\n      {pins.map(p => (\n        p._id === currentPlaceId && viewMode === 'weather' && weatherData[p._id] && (\n          <WeatherInfoWindow \n              key={p._id}\n              pin={p} \n              weatherData={weatherData}\n              setCurrentPlaceId={setCurrentPlaceId}\n          />\n        )\n      ))}\n\n      {newPlace && (\n        <NewPinForm \n            newPlace={newPlace}\n            formData={formData}\n            setFormData={setFormData}\n            handleSubmit={handleSubmit}\n            setNewPlace={setNewPlace}\n        />\n      )}\n    </div>\n  );\n}\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}